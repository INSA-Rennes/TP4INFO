package robot;

import fr.inria.triskell.k3.Aspect;
import fr.inria.triskell.k3.OverrideAspectMethod;
import robot.ContextNCX;
import robot.NXCCodeGenerator;
import robot.SetTurnAngleCmdAspectvoidAspectProperties;

@Aspect(className = void.class)
@SuppressWarnings("all")
public class SetTurnAngleCmdAspect extends NXCCodeGenerator {
  @OverrideAspectMethod
  public static StringBuilder generateCode(final void _self, final ContextNCX ctx) {
    throw new Error("Unresolved compilation problems:"
      + "\nThe primitive \'void\' cannot be the type of a parameter");
  }
  
  public static SetTurnAngleCmdAspectvoidAspectProperties _self_;
  
  private static StringBuilder super_generateCode(final void _self, final ContextNCX ctx) {
    throw new Error("Unresolved compilation problems:"
      + "\nThe primitive \'void\' cannot be the type of a parameter");
  }
  
  protected static StringBuilder privgenerateCode(final void _self, final ContextNCX ctx) {
    throw new Error("Unresolved compilation problems:"
      + "\nThe method angle is undefined for the type SetTurnAngleCmdAspect"
      + "\nType mismatch: type void is not applicable at this location"
      + "\nintValue cannot be resolved");
  }
}
