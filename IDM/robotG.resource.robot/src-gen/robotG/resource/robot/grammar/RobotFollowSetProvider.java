/**
 * <copyright>
 * </copyright>
 *
 * 
 */
package robotG.resource.robot.grammar;

/**
 * This class provides the follow sets for all terminals of the grammar. These
 * sets are used during code completion.
 */
public class RobotFollowSetProvider {
	
	public final static robotG.resource.robot.IRobotExpectedElement TERMINALS[] = new robotG.resource.robot.IRobotExpectedElement[77];
	
	public final static org.eclipse.emf.ecore.EStructuralFeature[] FEATURES = new org.eclipse.emf.ecore.EStructuralFeature[8];
	
	public final static robotG.resource.robot.mopp.RobotContainedFeature[] LINKS = new robotG.resource.robot.mopp.RobotContainedFeature[351];
	
	public final static robotG.resource.robot.mopp.RobotContainedFeature[] EMPTY_LINK_ARRAY = new robotG.resource.robot.mopp.RobotContainedFeature[0];
	
	public static void initializeTerminals0() {
		TERMINALS[0] = new robotG.resource.robot.mopp.RobotExpectedCsString(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_1_0_0_0);
		TERMINALS[1] = new robotG.resource.robot.mopp.RobotExpectedCsString(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_2_0_0_0);
		TERMINALS[2] = new robotG.resource.robot.mopp.RobotExpectedCsString(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_5_0_0_0);
		TERMINALS[3] = new robotG.resource.robot.mopp.RobotExpectedCsString(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_9_0_0_0);
		TERMINALS[4] = new robotG.resource.robot.mopp.RobotExpectedCsString(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_11_0_0_0);
		TERMINALS[5] = new robotG.resource.robot.mopp.RobotExpectedCsString(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_6_0_0_0);
		TERMINALS[6] = new robotG.resource.robot.mopp.RobotExpectedCsString(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_7_0_0_0);
		TERMINALS[7] = new robotG.resource.robot.mopp.RobotExpectedCsString(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_8_0_0_0);
		TERMINALS[8] = new robotG.resource.robot.mopp.RobotExpectedCsString(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_10_0_0_0);
		TERMINALS[9] = new robotG.resource.robot.mopp.RobotExpectedCsString(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_12_0_0_0);
		TERMINALS[10] = new robotG.resource.robot.mopp.RobotExpectedCsString(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_13_0_0_0);
		TERMINALS[11] = new robotG.resource.robot.mopp.RobotExpectedCsString(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_14_0_0_0);
		TERMINALS[12] = new robotG.resource.robot.mopp.RobotExpectedCsString(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_1_0_0_2);
		TERMINALS[13] = new robotG.resource.robot.mopp.RobotExpectedCsString(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_1_0_0_4);
		TERMINALS[14] = new robotG.resource.robot.mopp.RobotExpectedCsString(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_2_0_0_4);
		TERMINALS[15] = new robotG.resource.robot.mopp.RobotExpectedCsString(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_2_0_0_2);
		TERMINALS[16] = new robotG.resource.robot.mopp.RobotExpectedCsString(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_7_0_0_1);
		TERMINALS[17] = new robotG.resource.robot.mopp.RobotExpectedCsString(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_7_0_0_2);
		TERMINALS[18] = new robotG.resource.robot.mopp.RobotExpectedCsString(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_7_0_0_3);
		TERMINALS[19] = new robotG.resource.robot.mopp.RobotExpectedStructuralFeature(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_7_0_0_4);
		TERMINALS[20] = new robotG.resource.robot.mopp.RobotExpectedCsString(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_7_0_0_5);
		TERMINALS[21] = new robotG.resource.robot.mopp.RobotExpectedCsString(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_7_0_0_6);
		TERMINALS[22] = new robotG.resource.robot.mopp.RobotExpectedCsString(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_7_0_0_7);
		TERMINALS[23] = new robotG.resource.robot.mopp.RobotExpectedStructuralFeature(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_7_0_0_8);
		TERMINALS[24] = new robotG.resource.robot.mopp.RobotExpectedCsString(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_7_0_0_9);
		TERMINALS[25] = new robotG.resource.robot.mopp.RobotExpectedCsString(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_7_0_0_10);
		TERMINALS[26] = new robotG.resource.robot.mopp.RobotExpectedCsString(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_7_0_0_11);
		TERMINALS[27] = new robotG.resource.robot.mopp.RobotExpectedStructuralFeature(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_7_0_0_12);
		TERMINALS[28] = new robotG.resource.robot.mopp.RobotExpectedCsString(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_7_0_0_13);
		TERMINALS[29] = new robotG.resource.robot.mopp.RobotExpectedCsString(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_8_0_0_1);
		TERMINALS[30] = new robotG.resource.robot.mopp.RobotExpectedCsString(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_8_0_0_2);
		TERMINALS[31] = new robotG.resource.robot.mopp.RobotExpectedCsString(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_8_0_0_3);
		TERMINALS[32] = new robotG.resource.robot.mopp.RobotExpectedStructuralFeature(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_8_0_0_4);
		TERMINALS[33] = new robotG.resource.robot.mopp.RobotExpectedCsString(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_8_0_0_5);
		TERMINALS[34] = new robotG.resource.robot.mopp.RobotExpectedCsString(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_8_0_0_6);
		TERMINALS[35] = new robotG.resource.robot.mopp.RobotExpectedCsString(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_8_0_0_7);
		TERMINALS[36] = new robotG.resource.robot.mopp.RobotExpectedStructuralFeature(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_8_0_0_8);
		TERMINALS[37] = new robotG.resource.robot.mopp.RobotExpectedCsString(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_8_0_0_9);
		TERMINALS[38] = new robotG.resource.robot.mopp.RobotExpectedCsString(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_8_0_0_10);
		TERMINALS[39] = new robotG.resource.robot.mopp.RobotExpectedCsString(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_8_0_0_11);
		TERMINALS[40] = new robotG.resource.robot.mopp.RobotExpectedStructuralFeature(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_8_0_0_12);
		TERMINALS[41] = new robotG.resource.robot.mopp.RobotExpectedCsString(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_8_0_0_13);
		TERMINALS[42] = new robotG.resource.robot.mopp.RobotExpectedCsString(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_8_0_0_14);
		TERMINALS[43] = new robotG.resource.robot.mopp.RobotExpectedCsString(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_8_0_0_15);
		TERMINALS[44] = new robotG.resource.robot.mopp.RobotExpectedStructuralFeature(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_8_0_0_16);
		TERMINALS[45] = new robotG.resource.robot.mopp.RobotExpectedCsString(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_8_0_0_17);
		TERMINALS[46] = new robotG.resource.robot.mopp.RobotExpectedCsString(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_10_0_0_1);
		TERMINALS[47] = new robotG.resource.robot.mopp.RobotExpectedCsString(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_10_0_0_2);
		TERMINALS[48] = new robotG.resource.robot.mopp.RobotExpectedCsString(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_10_0_0_3);
		TERMINALS[49] = new robotG.resource.robot.mopp.RobotExpectedStructuralFeature(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_10_0_0_4);
		TERMINALS[50] = new robotG.resource.robot.mopp.RobotExpectedCsString(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_10_0_0_5);
		TERMINALS[51] = new robotG.resource.robot.mopp.RobotExpectedCsString(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_12_0_0_1);
		TERMINALS[52] = new robotG.resource.robot.mopp.RobotExpectedCsString(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_12_0_0_2);
		TERMINALS[53] = new robotG.resource.robot.mopp.RobotExpectedCsString(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_12_0_0_3);
		TERMINALS[54] = new robotG.resource.robot.mopp.RobotExpectedStructuralFeature(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_12_0_0_4);
		TERMINALS[55] = new robotG.resource.robot.mopp.RobotExpectedCsString(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_12_0_0_5);
		TERMINALS[56] = new robotG.resource.robot.mopp.RobotExpectedCsString(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_14_0_0_1);
		TERMINALS[57] = new robotG.resource.robot.mopp.RobotExpectedCsString(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_14_0_0_2);
		TERMINALS[58] = new robotG.resource.robot.mopp.RobotExpectedCsString(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_14_0_0_3);
		TERMINALS[59] = new robotG.resource.robot.mopp.RobotExpectedStructuralFeature(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_14_0_0_4);
		TERMINALS[60] = new robotG.resource.robot.mopp.RobotExpectedCsString(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_14_0_0_5);
		TERMINALS[61] = new robotG.resource.robot.mopp.RobotExpectedCsString(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_14_0_0_6);
		TERMINALS[62] = new robotG.resource.robot.mopp.RobotExpectedCsString(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_14_0_0_7);
		TERMINALS[63] = new robotG.resource.robot.mopp.RobotExpectedStructuralFeature(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_14_0_0_8);
		TERMINALS[64] = new robotG.resource.robot.mopp.RobotExpectedCsString(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_14_0_0_9);
		TERMINALS[65] = new robotG.resource.robot.mopp.RobotExpectedCsString(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_3_0_0_1);
		TERMINALS[66] = new robotG.resource.robot.mopp.RobotExpectedCsString(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_4_0_0_1);
		TERMINALS[67] = new robotG.resource.robot.mopp.RobotExpectedCsString(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_9_0_0_1);
		TERMINALS[68] = new robotG.resource.robot.mopp.RobotExpectedCsString(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_9_0_0_2);
		TERMINALS[69] = new robotG.resource.robot.mopp.RobotExpectedCsString(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_9_0_0_3);
		TERMINALS[70] = new robotG.resource.robot.mopp.RobotExpectedStructuralFeature(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_9_0_0_4);
		TERMINALS[71] = new robotG.resource.robot.mopp.RobotExpectedCsString(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_9_0_0_5);
		TERMINALS[72] = new robotG.resource.robot.mopp.RobotExpectedCsString(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_11_0_0_1);
		TERMINALS[73] = new robotG.resource.robot.mopp.RobotExpectedCsString(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_11_0_0_2);
		TERMINALS[74] = new robotG.resource.robot.mopp.RobotExpectedCsString(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_11_0_0_3);
		TERMINALS[75] = new robotG.resource.robot.mopp.RobotExpectedStructuralFeature(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_11_0_0_4);
		TERMINALS[76] = new robotG.resource.robot.mopp.RobotExpectedCsString(robotG.resource.robot.grammar.RobotGrammarInformationProvider.ROBOT_11_0_0_5);
	}
	
	public static void initializeTerminals() {
		initializeTerminals0();
	}
	
	public static void initializeFeatures0() {
		FEATURES[0] = robotG.flow.FlowPackage.eINSTANCE.getOpBinaire().getEStructuralFeature(robotG.flow.FlowPackage.OP_BINAIRE__FILS_GAUCHE);
		FEATURES[1] = robotG.flow.FlowPackage.eINSTANCE.getWhile().getEStructuralFeature(robotG.flow.FlowPackage.WHILE__CONDITION);
		FEATURES[2] = robotG.flow.FlowPackage.eINSTANCE.getWhile().getEStructuralFeature(robotG.flow.FlowPackage.WHILE__INSTRUCTIONS);
		FEATURES[3] = robotG.flow.FlowPackage.eINSTANCE.getProgramme().getEStructuralFeature(robotG.flow.FlowPackage.PROGRAMME__PROGRAMME);
		FEATURES[4] = robotG.flow.FlowPackage.eINSTANCE.getIf().getEStructuralFeature(robotG.flow.FlowPackage.IF__CONDITION);
		FEATURES[5] = robotG.flow.FlowPackage.eINSTANCE.getIf().getEStructuralFeature(robotG.flow.FlowPackage.IF__INSTRUCTIONS);
		FEATURES[6] = robotG.flow.FlowPackage.eINSTANCE.getOpBinaire().getEStructuralFeature(robotG.flow.FlowPackage.OP_BINAIRE__FILS_DROIT);
		FEATURES[7] = robotG.flow.FlowPackage.eINSTANCE.getOpUnaire().getEStructuralFeature(robotG.flow.FlowPackage.OP_UNAIRE__EXPRESSION);
	}
	
	public static void initializeFeatures() {
		initializeFeatures0();
	}
	
	public static void initializeLinks0() {
		LINKS[0] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getWhile(), FEATURES[3]);
		LINKS[1] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getIf(), FEATURES[3]);
		LINKS[2] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getNot(), FEATURES[0]);
		LINKS[3] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]);
		LINKS[4] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[3]);
		LINKS[5] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getHasTurned(), FEATURES[0]);
		LINKS[6] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]);
		LINKS[7] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[3]);
		LINKS[8] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getObstacle(), FEATURES[0]);
		LINKS[9] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]);
		LINKS[10] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[3]);
		LINKS[11] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getStopProgram(), FEATURES[3]);
		LINKS[12] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getBip(), FEATURES[3]);
		LINKS[13] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getDisplay(), FEATURES[3]);
		LINKS[14] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getMove(), FEATURES[3]);
		LINKS[15] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getSetTurnAngle(), FEATURES[3]);
		LINKS[16] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getStopEngine(), FEATURES[3]);
		LINKS[17] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getTurn(), FEATURES[3]);
		LINKS[18] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getWhile(), FEATURES[3]);
		LINKS[19] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getIf(), FEATURES[3]);
		LINKS[20] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getNot(), FEATURES[0]);
		LINKS[21] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]);
		LINKS[22] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[3]);
		LINKS[23] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getHasTurned(), FEATURES[0]);
		LINKS[24] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]);
		LINKS[25] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[3]);
		LINKS[26] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getObstacle(), FEATURES[0]);
		LINKS[27] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]);
		LINKS[28] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[3]);
		LINKS[29] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getStopProgram(), FEATURES[3]);
		LINKS[30] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getBip(), FEATURES[3]);
		LINKS[31] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getDisplay(), FEATURES[3]);
		LINKS[32] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getMove(), FEATURES[3]);
		LINKS[33] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getSetTurnAngle(), FEATURES[3]);
		LINKS[34] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getStopEngine(), FEATURES[3]);
		LINKS[35] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getTurn(), FEATURES[3]);
		LINKS[36] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getNot(), FEATURES[0]);
		LINKS[37] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]);
		LINKS[38] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[1]);
		LINKS[39] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getHasTurned(), FEATURES[0]);
		LINKS[40] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]);
		LINKS[41] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[1]);
		LINKS[42] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getObstacle(), FEATURES[0]);
		LINKS[43] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]);
		LINKS[44] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[1]);
		LINKS[45] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getWhile(), FEATURES[2]);
		LINKS[46] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getIf(), FEATURES[2]);
		LINKS[47] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getNot(), FEATURES[0]);
		LINKS[48] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]);
		LINKS[49] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[2]);
		LINKS[50] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getHasTurned(), FEATURES[0]);
		LINKS[51] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]);
		LINKS[52] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[2]);
		LINKS[53] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getObstacle(), FEATURES[0]);
		LINKS[54] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]);
		LINKS[55] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[2]);
		LINKS[56] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getStopProgram(), FEATURES[2]);
		LINKS[57] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getBip(), FEATURES[2]);
		LINKS[58] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getDisplay(), FEATURES[2]);
		LINKS[59] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getMove(), FEATURES[2]);
		LINKS[60] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getSetTurnAngle(), FEATURES[2]);
		LINKS[61] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getStopEngine(), FEATURES[2]);
		LINKS[62] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getTurn(), FEATURES[2]);
		LINKS[63] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getWhile(), FEATURES[2]);
		LINKS[64] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getIf(), FEATURES[2]);
		LINKS[65] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getNot(), FEATURES[0]);
		LINKS[66] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]);
		LINKS[67] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[2]);
		LINKS[68] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getHasTurned(), FEATURES[0]);
		LINKS[69] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]);
		LINKS[70] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[2]);
		LINKS[71] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getObstacle(), FEATURES[0]);
		LINKS[72] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]);
		LINKS[73] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[2]);
		LINKS[74] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getStopProgram(), FEATURES[2]);
		LINKS[75] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getBip(), FEATURES[2]);
		LINKS[76] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getDisplay(), FEATURES[2]);
		LINKS[77] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getMove(), FEATURES[2]);
		LINKS[78] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getSetTurnAngle(), FEATURES[2]);
		LINKS[79] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getStopEngine(), FEATURES[2]);
		LINKS[80] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getTurn(), FEATURES[2]);
		LINKS[81] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getWhile(), FEATURES[3]);
		LINKS[82] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getIf(), FEATURES[3]);
		LINKS[83] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getNot(), FEATURES[0]);
		LINKS[84] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]);
		LINKS[85] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[3]);
		LINKS[86] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getHasTurned(), FEATURES[0]);
		LINKS[87] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]);
		LINKS[88] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[3]);
		LINKS[89] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getObstacle(), FEATURES[0]);
		LINKS[90] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]);
		LINKS[91] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[3]);
		LINKS[92] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getStopProgram(), FEATURES[3]);
		LINKS[93] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getBip(), FEATURES[3]);
		LINKS[94] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getDisplay(), FEATURES[3]);
		LINKS[95] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getMove(), FEATURES[3]);
		LINKS[96] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getSetTurnAngle(), FEATURES[3]);
		LINKS[97] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getStopEngine(), FEATURES[3]);
		LINKS[98] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getTurn(), FEATURES[3]);
		LINKS[99] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getNot(), FEATURES[0]);
		LINKS[100] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]);
		LINKS[101] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[4]);
		LINKS[102] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getHasTurned(), FEATURES[0]);
		LINKS[103] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]);
		LINKS[104] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[4]);
		LINKS[105] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getObstacle(), FEATURES[0]);
		LINKS[106] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]);
		LINKS[107] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[4]);
		LINKS[108] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getWhile(), FEATURES[5]);
		LINKS[109] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getIf(), FEATURES[5]);
		LINKS[110] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getNot(), FEATURES[0]);
		LINKS[111] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]);
		LINKS[112] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[5]);
		LINKS[113] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getHasTurned(), FEATURES[0]);
		LINKS[114] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]);
		LINKS[115] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[5]);
		LINKS[116] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getObstacle(), FEATURES[0]);
		LINKS[117] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]);
		LINKS[118] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[5]);
		LINKS[119] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getStopProgram(), FEATURES[5]);
		LINKS[120] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getBip(), FEATURES[5]);
		LINKS[121] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getDisplay(), FEATURES[5]);
		LINKS[122] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getMove(), FEATURES[5]);
		LINKS[123] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getSetTurnAngle(), FEATURES[5]);
		LINKS[124] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getStopEngine(), FEATURES[5]);
		LINKS[125] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getTurn(), FEATURES[5]);
		LINKS[126] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getWhile(), FEATURES[5]);
		LINKS[127] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getIf(), FEATURES[5]);
		LINKS[128] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getNot(), FEATURES[0]);
		LINKS[129] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]);
		LINKS[130] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[5]);
		LINKS[131] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getHasTurned(), FEATURES[0]);
		LINKS[132] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]);
		LINKS[133] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[5]);
		LINKS[134] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getObstacle(), FEATURES[0]);
		LINKS[135] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]);
		LINKS[136] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[5]);
		LINKS[137] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getStopProgram(), FEATURES[5]);
		LINKS[138] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getBip(), FEATURES[5]);
		LINKS[139] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getDisplay(), FEATURES[5]);
		LINKS[140] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getMove(), FEATURES[5]);
		LINKS[141] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getSetTurnAngle(), FEATURES[5]);
		LINKS[142] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getStopEngine(), FEATURES[5]);
		LINKS[143] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getTurn(), FEATURES[5]);
		LINKS[144] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getWhile(), FEATURES[3]);
		LINKS[145] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getIf(), FEATURES[3]);
		LINKS[146] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getNot(), FEATURES[0]);
		LINKS[147] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]);
		LINKS[148] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[3]);
		LINKS[149] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getHasTurned(), FEATURES[0]);
		LINKS[150] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]);
		LINKS[151] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[3]);
		LINKS[152] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getObstacle(), FEATURES[0]);
		LINKS[153] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]);
		LINKS[154] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[3]);
		LINKS[155] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getStopProgram(), FEATURES[3]);
		LINKS[156] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getBip(), FEATURES[3]);
		LINKS[157] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getDisplay(), FEATURES[3]);
		LINKS[158] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getMove(), FEATURES[3]);
		LINKS[159] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getSetTurnAngle(), FEATURES[3]);
		LINKS[160] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getStopEngine(), FEATURES[3]);
		LINKS[161] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getTurn(), FEATURES[3]);
		LINKS[162] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getWhile(), FEATURES[3]);
		LINKS[163] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getIf(), FEATURES[3]);
		LINKS[164] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getNot(), FEATURES[0]);
		LINKS[165] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]);
		LINKS[166] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[3]);
		LINKS[167] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getHasTurned(), FEATURES[0]);
		LINKS[168] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]);
		LINKS[169] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[3]);
		LINKS[170] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getObstacle(), FEATURES[0]);
		LINKS[171] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]);
		LINKS[172] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[3]);
		LINKS[173] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getStopProgram(), FEATURES[3]);
		LINKS[174] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getBip(), FEATURES[3]);
		LINKS[175] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getDisplay(), FEATURES[3]);
		LINKS[176] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getMove(), FEATURES[3]);
		LINKS[177] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getSetTurnAngle(), FEATURES[3]);
		LINKS[178] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getStopEngine(), FEATURES[3]);
		LINKS[179] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getTurn(), FEATURES[3]);
		LINKS[180] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getWhile(), FEATURES[3]);
		LINKS[181] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getIf(), FEATURES[3]);
		LINKS[182] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getNot(), FEATURES[0]);
		LINKS[183] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]);
		LINKS[184] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[3]);
		LINKS[185] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getHasTurned(), FEATURES[0]);
		LINKS[186] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]);
		LINKS[187] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[3]);
		LINKS[188] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getObstacle(), FEATURES[0]);
		LINKS[189] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]);
		LINKS[190] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[3]);
		LINKS[191] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getStopProgram(), FEATURES[3]);
		LINKS[192] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getBip(), FEATURES[3]);
		LINKS[193] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getDisplay(), FEATURES[3]);
		LINKS[194] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getMove(), FEATURES[3]);
		LINKS[195] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getSetTurnAngle(), FEATURES[3]);
		LINKS[196] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getStopEngine(), FEATURES[3]);
		LINKS[197] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getTurn(), FEATURES[3]);
		LINKS[198] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getWhile(), FEATURES[3]);
		LINKS[199] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getIf(), FEATURES[3]);
		LINKS[200] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getNot(), FEATURES[0]);
		LINKS[201] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]);
		LINKS[202] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[3]);
		LINKS[203] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getHasTurned(), FEATURES[0]);
		LINKS[204] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]);
		LINKS[205] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[3]);
		LINKS[206] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getObstacle(), FEATURES[0]);
		LINKS[207] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]);
		LINKS[208] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[3]);
		LINKS[209] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getStopProgram(), FEATURES[3]);
		LINKS[210] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getBip(), FEATURES[3]);
		LINKS[211] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getDisplay(), FEATURES[3]);
		LINKS[212] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getMove(), FEATURES[3]);
		LINKS[213] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getSetTurnAngle(), FEATURES[3]);
		LINKS[214] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getStopEngine(), FEATURES[3]);
		LINKS[215] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getTurn(), FEATURES[3]);
		LINKS[216] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getWhile(), FEATURES[3]);
		LINKS[217] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getIf(), FEATURES[3]);
		LINKS[218] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getNot(), FEATURES[0]);
		LINKS[219] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]);
		LINKS[220] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[3]);
		LINKS[221] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getHasTurned(), FEATURES[0]);
		LINKS[222] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]);
		LINKS[223] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[3]);
		LINKS[224] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getObstacle(), FEATURES[0]);
		LINKS[225] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]);
		LINKS[226] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[3]);
		LINKS[227] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getStopProgram(), FEATURES[3]);
		LINKS[228] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getBip(), FEATURES[3]);
		LINKS[229] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getDisplay(), FEATURES[3]);
		LINKS[230] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getMove(), FEATURES[3]);
		LINKS[231] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getSetTurnAngle(), FEATURES[3]);
		LINKS[232] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getStopEngine(), FEATURES[3]);
		LINKS[233] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getTurn(), FEATURES[3]);
		LINKS[234] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getWhile(), FEATURES[3]);
		LINKS[235] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getIf(), FEATURES[3]);
		LINKS[236] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getNot(), FEATURES[0]);
		LINKS[237] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]);
		LINKS[238] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[3]);
		LINKS[239] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getHasTurned(), FEATURES[0]);
		LINKS[240] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]);
		LINKS[241] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[3]);
		LINKS[242] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getObstacle(), FEATURES[0]);
		LINKS[243] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]);
		LINKS[244] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[3]);
		LINKS[245] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getStopProgram(), FEATURES[3]);
		LINKS[246] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getBip(), FEATURES[3]);
		LINKS[247] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getDisplay(), FEATURES[3]);
		LINKS[248] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getMove(), FEATURES[3]);
		LINKS[249] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getSetTurnAngle(), FEATURES[3]);
		LINKS[250] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getStopEngine(), FEATURES[3]);
		LINKS[251] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getTurn(), FEATURES[3]);
		LINKS[252] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getWhile(), FEATURES[3]);
		LINKS[253] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getIf(), FEATURES[3]);
		LINKS[254] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getNot(), FEATURES[0]);
		LINKS[255] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]);
		LINKS[256] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[3]);
		LINKS[257] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getHasTurned(), FEATURES[0]);
		LINKS[258] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]);
		LINKS[259] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[3]);
		LINKS[260] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getObstacle(), FEATURES[0]);
		LINKS[261] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]);
		LINKS[262] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[3]);
		LINKS[263] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getStopProgram(), FEATURES[3]);
		LINKS[264] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getBip(), FEATURES[3]);
		LINKS[265] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getDisplay(), FEATURES[3]);
		LINKS[266] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getMove(), FEATURES[3]);
		LINKS[267] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getSetTurnAngle(), FEATURES[3]);
		LINKS[268] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getStopEngine(), FEATURES[3]);
		LINKS[269] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getTurn(), FEATURES[3]);
		LINKS[270] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getWhile(), FEATURES[3]);
		LINKS[271] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getIf(), FEATURES[3]);
		LINKS[272] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getNot(), FEATURES[0]);
		LINKS[273] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]);
		LINKS[274] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[3]);
		LINKS[275] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getHasTurned(), FEATURES[0]);
		LINKS[276] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]);
		LINKS[277] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[3]);
		LINKS[278] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getObstacle(), FEATURES[0]);
		LINKS[279] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]);
		LINKS[280] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[3]);
		LINKS[281] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getStopProgram(), FEATURES[3]);
		LINKS[282] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getBip(), FEATURES[3]);
		LINKS[283] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getDisplay(), FEATURES[3]);
		LINKS[284] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getMove(), FEATURES[3]);
		LINKS[285] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getSetTurnAngle(), FEATURES[3]);
		LINKS[286] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getStopEngine(), FEATURES[3]);
		LINKS[287] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getTurn(), FEATURES[3]);
		LINKS[288] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getNot(), FEATURES[0]);
		LINKS[289] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]);
		LINKS[290] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[6]);
		LINKS[291] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getHasTurned(), FEATURES[0]);
		LINKS[292] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]);
		LINKS[293] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[6]);
		LINKS[294] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getObstacle(), FEATURES[0]);
		LINKS[295] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]);
		LINKS[296] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[6]);
		LINKS[297] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getNot(), FEATURES[0]);
		LINKS[298] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]);
		LINKS[299] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[6]);
		LINKS[300] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getHasTurned(), FEATURES[0]);
		LINKS[301] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]);
		LINKS[302] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[6]);
		LINKS[303] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getObstacle(), FEATURES[0]);
		LINKS[304] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]);
		LINKS[305] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[6]);
		LINKS[306] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getNot(), FEATURES[0]);
		LINKS[307] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]);
		LINKS[308] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[7]);
		LINKS[309] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getHasTurned(), FEATURES[0]);
		LINKS[310] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]);
		LINKS[311] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[7]);
		LINKS[312] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getObstacle(), FEATURES[0]);
		LINKS[313] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]);
		LINKS[314] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[7]);
		LINKS[315] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getWhile(), FEATURES[3]);
		LINKS[316] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getIf(), FEATURES[3]);
		LINKS[317] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getNot(), FEATURES[0]);
		LINKS[318] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]);
		LINKS[319] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[3]);
		LINKS[320] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getHasTurned(), FEATURES[0]);
		LINKS[321] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]);
		LINKS[322] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[3]);
		LINKS[323] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getObstacle(), FEATURES[0]);
		LINKS[324] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]);
		LINKS[325] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[3]);
		LINKS[326] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getStopProgram(), FEATURES[3]);
		LINKS[327] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getBip(), FEATURES[3]);
		LINKS[328] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getDisplay(), FEATURES[3]);
		LINKS[329] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getMove(), FEATURES[3]);
		LINKS[330] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getSetTurnAngle(), FEATURES[3]);
		LINKS[331] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getStopEngine(), FEATURES[3]);
		LINKS[332] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getTurn(), FEATURES[3]);
		LINKS[333] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getWhile(), FEATURES[3]);
		LINKS[334] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getIf(), FEATURES[3]);
		LINKS[335] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getNot(), FEATURES[0]);
		LINKS[336] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]);
		LINKS[337] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[3]);
		LINKS[338] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getHasTurned(), FEATURES[0]);
		LINKS[339] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]);
		LINKS[340] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[3]);
		LINKS[341] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getObstacle(), FEATURES[0]);
		LINKS[342] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]);
		LINKS[343] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[3]);
		LINKS[344] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getStopProgram(), FEATURES[3]);
		LINKS[345] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getBip(), FEATURES[3]);
		LINKS[346] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getDisplay(), FEATURES[3]);
		LINKS[347] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getMove(), FEATURES[3]);
		LINKS[348] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getSetTurnAngle(), FEATURES[3]);
		LINKS[349] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getStopEngine(), FEATURES[3]);
		LINKS[350] = new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getTurn(), FEATURES[3]);
	}
	
	public static void initializeLinks() {
		initializeLinks0();
	}
	
	public static void wire0() {
		TERMINALS[0].addFollower(TERMINALS[2], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getNot(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[1]), });
		TERMINALS[0].addFollower(TERMINALS[3], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getHasTurned(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[1]), });
		TERMINALS[0].addFollower(TERMINALS[4], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getObstacle(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[1]), });
		TERMINALS[12].addFollower(TERMINALS[0], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getWhile(), FEATURES[2]), });
		TERMINALS[12].addFollower(TERMINALS[1], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getIf(), FEATURES[2]), });
		TERMINALS[12].addFollower(TERMINALS[2], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getNot(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[2]), });
		TERMINALS[12].addFollower(TERMINALS[3], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getHasTurned(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[2]), });
		TERMINALS[12].addFollower(TERMINALS[4], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getObstacle(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[2]), });
		TERMINALS[12].addFollower(TERMINALS[5], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getStopProgram(), FEATURES[2]), });
		TERMINALS[12].addFollower(TERMINALS[6], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getBip(), FEATURES[2]), });
		TERMINALS[12].addFollower(TERMINALS[7], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getDisplay(), FEATURES[2]), });
		TERMINALS[12].addFollower(TERMINALS[8], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getMove(), FEATURES[2]), });
		TERMINALS[12].addFollower(TERMINALS[9], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getSetTurnAngle(), FEATURES[2]), });
		TERMINALS[12].addFollower(TERMINALS[10], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getStopEngine(), FEATURES[2]), });
		TERMINALS[12].addFollower(TERMINALS[11], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getTurn(), FEATURES[2]), });
		TERMINALS[12].addFollower(TERMINALS[13], EMPTY_LINK_ARRAY);
		TERMINALS[13].addFollower(TERMINALS[0], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getWhile(), FEATURES[3]), });
		TERMINALS[13].addFollower(TERMINALS[1], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getIf(), FEATURES[3]), });
		TERMINALS[13].addFollower(TERMINALS[2], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getNot(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[3]), });
		TERMINALS[13].addFollower(TERMINALS[3], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getHasTurned(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[3]), });
		TERMINALS[13].addFollower(TERMINALS[4], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getObstacle(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[3]), });
		TERMINALS[13].addFollower(TERMINALS[5], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getStopProgram(), FEATURES[3]), });
		TERMINALS[13].addFollower(TERMINALS[6], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getBip(), FEATURES[3]), });
		TERMINALS[13].addFollower(TERMINALS[7], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getDisplay(), FEATURES[3]), });
		TERMINALS[13].addFollower(TERMINALS[8], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getMove(), FEATURES[3]), });
		TERMINALS[13].addFollower(TERMINALS[9], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getSetTurnAngle(), FEATURES[3]), });
		TERMINALS[13].addFollower(TERMINALS[10], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getStopEngine(), FEATURES[3]), });
		TERMINALS[13].addFollower(TERMINALS[11], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getTurn(), FEATURES[3]), });
		TERMINALS[13].addFollower(TERMINALS[13], EMPTY_LINK_ARRAY);
		TERMINALS[13].addFollower(TERMINALS[14], EMPTY_LINK_ARRAY);
		TERMINALS[1].addFollower(TERMINALS[2], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getNot(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[4]), });
		TERMINALS[1].addFollower(TERMINALS[3], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getHasTurned(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[4]), });
		TERMINALS[1].addFollower(TERMINALS[4], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getObstacle(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[4]), });
		TERMINALS[15].addFollower(TERMINALS[0], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getWhile(), FEATURES[5]), });
		TERMINALS[15].addFollower(TERMINALS[1], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getIf(), FEATURES[5]), });
		TERMINALS[15].addFollower(TERMINALS[2], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getNot(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[5]), });
		TERMINALS[15].addFollower(TERMINALS[3], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getHasTurned(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[5]), });
		TERMINALS[15].addFollower(TERMINALS[4], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getObstacle(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[5]), });
		TERMINALS[15].addFollower(TERMINALS[5], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getStopProgram(), FEATURES[5]), });
		TERMINALS[15].addFollower(TERMINALS[6], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getBip(), FEATURES[5]), });
		TERMINALS[15].addFollower(TERMINALS[7], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getDisplay(), FEATURES[5]), });
		TERMINALS[15].addFollower(TERMINALS[8], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getMove(), FEATURES[5]), });
		TERMINALS[15].addFollower(TERMINALS[9], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getSetTurnAngle(), FEATURES[5]), });
		TERMINALS[15].addFollower(TERMINALS[10], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getStopEngine(), FEATURES[5]), });
		TERMINALS[15].addFollower(TERMINALS[11], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getTurn(), FEATURES[5]), });
		TERMINALS[15].addFollower(TERMINALS[14], EMPTY_LINK_ARRAY);
		TERMINALS[14].addFollower(TERMINALS[0], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getWhile(), FEATURES[3]), });
		TERMINALS[14].addFollower(TERMINALS[1], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getIf(), FEATURES[3]), });
		TERMINALS[14].addFollower(TERMINALS[2], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getNot(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[3]), });
		TERMINALS[14].addFollower(TERMINALS[3], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getHasTurned(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[3]), });
		TERMINALS[14].addFollower(TERMINALS[4], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getObstacle(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[3]), });
		TERMINALS[14].addFollower(TERMINALS[5], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getStopProgram(), FEATURES[3]), });
		TERMINALS[14].addFollower(TERMINALS[6], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getBip(), FEATURES[3]), });
		TERMINALS[14].addFollower(TERMINALS[7], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getDisplay(), FEATURES[3]), });
		TERMINALS[14].addFollower(TERMINALS[8], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getMove(), FEATURES[3]), });
		TERMINALS[14].addFollower(TERMINALS[9], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getSetTurnAngle(), FEATURES[3]), });
		TERMINALS[14].addFollower(TERMINALS[10], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getStopEngine(), FEATURES[3]), });
		TERMINALS[14].addFollower(TERMINALS[11], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getTurn(), FEATURES[3]), });
		TERMINALS[14].addFollower(TERMINALS[13], EMPTY_LINK_ARRAY);
		TERMINALS[14].addFollower(TERMINALS[14], EMPTY_LINK_ARRAY);
		TERMINALS[5].addFollower(TERMINALS[0], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getWhile(), FEATURES[3]), });
		TERMINALS[5].addFollower(TERMINALS[1], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getIf(), FEATURES[3]), });
		TERMINALS[5].addFollower(TERMINALS[2], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getNot(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[3]), });
		TERMINALS[5].addFollower(TERMINALS[3], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getHasTurned(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[3]), });
		TERMINALS[5].addFollower(TERMINALS[4], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getObstacle(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[3]), });
		TERMINALS[5].addFollower(TERMINALS[5], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getStopProgram(), FEATURES[3]), });
		TERMINALS[5].addFollower(TERMINALS[6], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getBip(), FEATURES[3]), });
		TERMINALS[5].addFollower(TERMINALS[7], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getDisplay(), FEATURES[3]), });
		TERMINALS[5].addFollower(TERMINALS[8], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getMove(), FEATURES[3]), });
		TERMINALS[5].addFollower(TERMINALS[9], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getSetTurnAngle(), FEATURES[3]), });
		TERMINALS[5].addFollower(TERMINALS[10], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getStopEngine(), FEATURES[3]), });
		TERMINALS[5].addFollower(TERMINALS[11], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getTurn(), FEATURES[3]), });
		TERMINALS[5].addFollower(TERMINALS[13], EMPTY_LINK_ARRAY);
		TERMINALS[5].addFollower(TERMINALS[14], EMPTY_LINK_ARRAY);
		TERMINALS[6].addFollower(TERMINALS[16], EMPTY_LINK_ARRAY);
		TERMINALS[16].addFollower(TERMINALS[17], EMPTY_LINK_ARRAY);
		TERMINALS[17].addFollower(TERMINALS[18], EMPTY_LINK_ARRAY);
		TERMINALS[18].addFollower(TERMINALS[19], EMPTY_LINK_ARRAY);
		TERMINALS[19].addFollower(TERMINALS[20], EMPTY_LINK_ARRAY);
		TERMINALS[20].addFollower(TERMINALS[21], EMPTY_LINK_ARRAY);
		TERMINALS[21].addFollower(TERMINALS[22], EMPTY_LINK_ARRAY);
		TERMINALS[22].addFollower(TERMINALS[23], EMPTY_LINK_ARRAY);
		TERMINALS[23].addFollower(TERMINALS[24], EMPTY_LINK_ARRAY);
		TERMINALS[24].addFollower(TERMINALS[25], EMPTY_LINK_ARRAY);
		TERMINALS[25].addFollower(TERMINALS[26], EMPTY_LINK_ARRAY);
		TERMINALS[26].addFollower(TERMINALS[27], EMPTY_LINK_ARRAY);
		TERMINALS[27].addFollower(TERMINALS[28], EMPTY_LINK_ARRAY);
		TERMINALS[28].addFollower(TERMINALS[0], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getWhile(), FEATURES[3]), });
		TERMINALS[28].addFollower(TERMINALS[1], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getIf(), FEATURES[3]), });
		TERMINALS[28].addFollower(TERMINALS[2], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getNot(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[3]), });
		TERMINALS[28].addFollower(TERMINALS[3], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getHasTurned(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[3]), });
		TERMINALS[28].addFollower(TERMINALS[4], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getObstacle(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[3]), });
		TERMINALS[28].addFollower(TERMINALS[5], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getStopProgram(), FEATURES[3]), });
		TERMINALS[28].addFollower(TERMINALS[6], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getBip(), FEATURES[3]), });
		TERMINALS[28].addFollower(TERMINALS[7], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getDisplay(), FEATURES[3]), });
		TERMINALS[28].addFollower(TERMINALS[8], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getMove(), FEATURES[3]), });
		TERMINALS[28].addFollower(TERMINALS[9], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getSetTurnAngle(), FEATURES[3]), });
		TERMINALS[28].addFollower(TERMINALS[10], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getStopEngine(), FEATURES[3]), });
		TERMINALS[28].addFollower(TERMINALS[11], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getTurn(), FEATURES[3]), });
		TERMINALS[28].addFollower(TERMINALS[13], EMPTY_LINK_ARRAY);
		TERMINALS[28].addFollower(TERMINALS[14], EMPTY_LINK_ARRAY);
		TERMINALS[7].addFollower(TERMINALS[29], EMPTY_LINK_ARRAY);
		TERMINALS[29].addFollower(TERMINALS[30], EMPTY_LINK_ARRAY);
		TERMINALS[30].addFollower(TERMINALS[31], EMPTY_LINK_ARRAY);
		TERMINALS[31].addFollower(TERMINALS[32], EMPTY_LINK_ARRAY);
		TERMINALS[32].addFollower(TERMINALS[33], EMPTY_LINK_ARRAY);
		TERMINALS[33].addFollower(TERMINALS[34], EMPTY_LINK_ARRAY);
		TERMINALS[34].addFollower(TERMINALS[35], EMPTY_LINK_ARRAY);
		TERMINALS[35].addFollower(TERMINALS[36], EMPTY_LINK_ARRAY);
		TERMINALS[36].addFollower(TERMINALS[37], EMPTY_LINK_ARRAY);
		TERMINALS[37].addFollower(TERMINALS[38], EMPTY_LINK_ARRAY);
		TERMINALS[38].addFollower(TERMINALS[39], EMPTY_LINK_ARRAY);
		TERMINALS[39].addFollower(TERMINALS[40], EMPTY_LINK_ARRAY);
		TERMINALS[40].addFollower(TERMINALS[41], EMPTY_LINK_ARRAY);
		TERMINALS[41].addFollower(TERMINALS[42], EMPTY_LINK_ARRAY);
		TERMINALS[42].addFollower(TERMINALS[43], EMPTY_LINK_ARRAY);
		TERMINALS[43].addFollower(TERMINALS[44], EMPTY_LINK_ARRAY);
		TERMINALS[44].addFollower(TERMINALS[45], EMPTY_LINK_ARRAY);
		TERMINALS[45].addFollower(TERMINALS[0], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getWhile(), FEATURES[3]), });
		TERMINALS[45].addFollower(TERMINALS[1], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getIf(), FEATURES[3]), });
		TERMINALS[45].addFollower(TERMINALS[2], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getNot(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[3]), });
		TERMINALS[45].addFollower(TERMINALS[3], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getHasTurned(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[3]), });
		TERMINALS[45].addFollower(TERMINALS[4], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getObstacle(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[3]), });
		TERMINALS[45].addFollower(TERMINALS[5], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getStopProgram(), FEATURES[3]), });
		TERMINALS[45].addFollower(TERMINALS[6], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getBip(), FEATURES[3]), });
		TERMINALS[45].addFollower(TERMINALS[7], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getDisplay(), FEATURES[3]), });
		TERMINALS[45].addFollower(TERMINALS[8], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getMove(), FEATURES[3]), });
		TERMINALS[45].addFollower(TERMINALS[9], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getSetTurnAngle(), FEATURES[3]), });
		TERMINALS[45].addFollower(TERMINALS[10], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getStopEngine(), FEATURES[3]), });
		TERMINALS[45].addFollower(TERMINALS[11], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getTurn(), FEATURES[3]), });
		TERMINALS[45].addFollower(TERMINALS[13], EMPTY_LINK_ARRAY);
		TERMINALS[45].addFollower(TERMINALS[14], EMPTY_LINK_ARRAY);
		TERMINALS[8].addFollower(TERMINALS[46], EMPTY_LINK_ARRAY);
		TERMINALS[46].addFollower(TERMINALS[47], EMPTY_LINK_ARRAY);
		TERMINALS[47].addFollower(TERMINALS[48], EMPTY_LINK_ARRAY);
		TERMINALS[48].addFollower(TERMINALS[49], EMPTY_LINK_ARRAY);
		TERMINALS[49].addFollower(TERMINALS[50], EMPTY_LINK_ARRAY);
		TERMINALS[50].addFollower(TERMINALS[0], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getWhile(), FEATURES[3]), });
		TERMINALS[50].addFollower(TERMINALS[1], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getIf(), FEATURES[3]), });
		TERMINALS[50].addFollower(TERMINALS[2], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getNot(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[3]), });
		TERMINALS[50].addFollower(TERMINALS[3], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getHasTurned(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[3]), });
		TERMINALS[50].addFollower(TERMINALS[4], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getObstacle(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[3]), });
		TERMINALS[50].addFollower(TERMINALS[5], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getStopProgram(), FEATURES[3]), });
		TERMINALS[50].addFollower(TERMINALS[6], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getBip(), FEATURES[3]), });
		TERMINALS[50].addFollower(TERMINALS[7], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getDisplay(), FEATURES[3]), });
		TERMINALS[50].addFollower(TERMINALS[8], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getMove(), FEATURES[3]), });
		TERMINALS[50].addFollower(TERMINALS[9], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getSetTurnAngle(), FEATURES[3]), });
		TERMINALS[50].addFollower(TERMINALS[10], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getStopEngine(), FEATURES[3]), });
		TERMINALS[50].addFollower(TERMINALS[11], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getTurn(), FEATURES[3]), });
		TERMINALS[50].addFollower(TERMINALS[13], EMPTY_LINK_ARRAY);
		TERMINALS[50].addFollower(TERMINALS[14], EMPTY_LINK_ARRAY);
		TERMINALS[9].addFollower(TERMINALS[51], EMPTY_LINK_ARRAY);
		TERMINALS[51].addFollower(TERMINALS[52], EMPTY_LINK_ARRAY);
		TERMINALS[52].addFollower(TERMINALS[53], EMPTY_LINK_ARRAY);
		TERMINALS[53].addFollower(TERMINALS[54], EMPTY_LINK_ARRAY);
		TERMINALS[54].addFollower(TERMINALS[55], EMPTY_LINK_ARRAY);
		TERMINALS[55].addFollower(TERMINALS[0], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getWhile(), FEATURES[3]), });
		TERMINALS[55].addFollower(TERMINALS[1], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getIf(), FEATURES[3]), });
		TERMINALS[55].addFollower(TERMINALS[2], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getNot(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[3]), });
		TERMINALS[55].addFollower(TERMINALS[3], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getHasTurned(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[3]), });
		TERMINALS[55].addFollower(TERMINALS[4], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getObstacle(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[3]), });
		TERMINALS[55].addFollower(TERMINALS[5], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getStopProgram(), FEATURES[3]), });
		TERMINALS[55].addFollower(TERMINALS[6], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getBip(), FEATURES[3]), });
		TERMINALS[55].addFollower(TERMINALS[7], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getDisplay(), FEATURES[3]), });
		TERMINALS[55].addFollower(TERMINALS[8], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getMove(), FEATURES[3]), });
		TERMINALS[55].addFollower(TERMINALS[9], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getSetTurnAngle(), FEATURES[3]), });
		TERMINALS[55].addFollower(TERMINALS[10], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getStopEngine(), FEATURES[3]), });
		TERMINALS[55].addFollower(TERMINALS[11], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getTurn(), FEATURES[3]), });
		TERMINALS[55].addFollower(TERMINALS[13], EMPTY_LINK_ARRAY);
		TERMINALS[55].addFollower(TERMINALS[14], EMPTY_LINK_ARRAY);
		TERMINALS[10].addFollower(TERMINALS[0], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getWhile(), FEATURES[3]), });
		TERMINALS[10].addFollower(TERMINALS[1], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getIf(), FEATURES[3]), });
		TERMINALS[10].addFollower(TERMINALS[2], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getNot(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[3]), });
		TERMINALS[10].addFollower(TERMINALS[3], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getHasTurned(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[3]), });
		TERMINALS[10].addFollower(TERMINALS[4], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getObstacle(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[3]), });
		TERMINALS[10].addFollower(TERMINALS[5], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getStopProgram(), FEATURES[3]), });
		TERMINALS[10].addFollower(TERMINALS[6], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getBip(), FEATURES[3]), });
		TERMINALS[10].addFollower(TERMINALS[7], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getDisplay(), FEATURES[3]), });
		TERMINALS[10].addFollower(TERMINALS[8], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getMove(), FEATURES[3]), });
		TERMINALS[10].addFollower(TERMINALS[9], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getSetTurnAngle(), FEATURES[3]), });
		TERMINALS[10].addFollower(TERMINALS[10], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getStopEngine(), FEATURES[3]), });
		TERMINALS[10].addFollower(TERMINALS[11], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getTurn(), FEATURES[3]), });
		TERMINALS[10].addFollower(TERMINALS[13], EMPTY_LINK_ARRAY);
		TERMINALS[10].addFollower(TERMINALS[14], EMPTY_LINK_ARRAY);
		TERMINALS[11].addFollower(TERMINALS[56], EMPTY_LINK_ARRAY);
		TERMINALS[56].addFollower(TERMINALS[57], EMPTY_LINK_ARRAY);
		TERMINALS[57].addFollower(TERMINALS[58], EMPTY_LINK_ARRAY);
		TERMINALS[58].addFollower(TERMINALS[59], EMPTY_LINK_ARRAY);
		TERMINALS[59].addFollower(TERMINALS[60], EMPTY_LINK_ARRAY);
		TERMINALS[60].addFollower(TERMINALS[61], EMPTY_LINK_ARRAY);
		TERMINALS[61].addFollower(TERMINALS[62], EMPTY_LINK_ARRAY);
		TERMINALS[62].addFollower(TERMINALS[63], EMPTY_LINK_ARRAY);
		TERMINALS[63].addFollower(TERMINALS[64], EMPTY_LINK_ARRAY);
		TERMINALS[64].addFollower(TERMINALS[0], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getWhile(), FEATURES[3]), });
		TERMINALS[64].addFollower(TERMINALS[1], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getIf(), FEATURES[3]), });
		TERMINALS[64].addFollower(TERMINALS[2], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getNot(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[3]), });
		TERMINALS[64].addFollower(TERMINALS[3], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getHasTurned(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[3]), });
		TERMINALS[64].addFollower(TERMINALS[4], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getObstacle(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getOr(), FEATURES[0]), new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getAnd(), FEATURES[3]), });
		TERMINALS[64].addFollower(TERMINALS[5], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.flow.FlowPackage.eINSTANCE.getStopProgram(), FEATURES[3]), });
		TERMINALS[64].addFollower(TERMINALS[6], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getBip(), FEATURES[3]), });
		TERMINALS[64].addFollower(TERMINALS[7], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getDisplay(), FEATURES[3]), });
		TERMINALS[64].addFollower(TERMINALS[8], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getMove(), FEATURES[3]), });
		TERMINALS[64].addFollower(TERMINALS[9], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getSetTurnAngle(), FEATURES[3]), });
		TERMINALS[64].addFollower(TERMINALS[10], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getStopEngine(), FEATURES[3]), });
		TERMINALS[64].addFollower(TERMINALS[11], new robotG.resource.robot.mopp.RobotContainedFeature[] {new robotG.resource.robot.mopp.RobotContainedFeature(robotG.robot.RobotPackage.eINSTANCE.getTurn(), FEATURES[3]), });
		TERMINALS[64].addFollower(TERMINALS[13], EMPTY_LINK_ARRAY);
		TERMINALS[64].addFollower(TERMINALS[14], EMPTY_LINK_ARRAY);
	}
	
	public static void wire() {
		wire0();
	}
	
	static {
		// initialize the arrays
		initializeTerminals();
		initializeFeatures();
		initializeLinks();
		// wire the terminals
		wire();
	}
}
